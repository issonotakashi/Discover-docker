name: Deploy to Production

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known hosts
        run: |
          ssh-keyscan -H sami.semlali.takima.cloud >> ~/.ssh/known_hosts

      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible

      - name: Verify Ansible files
        run: |
          ls -la ansible/
          ls -la ansible/inventories/
          ls -la ansible/playbook.yml

      - name: Emergency disk cleanup
        run: |
          echo "=== Emergency disk cleanup ==="
          ssh admin@sami.semlali.takima.cloud "df -h"
          echo "=== Cleaning Docker ==="
          ssh admin@sami.semlali.takima.cloud "sudo docker system prune -af --volumes || true"
          echo "=== Cleaning temp directories ==="
          ssh admin@sami.semlali.takima.cloud "sudo rm -rf /tmp/* /home/admin/.ansible/tmp/* || true"
          echo "=== Cleaning logs ==="
          ssh admin@sami.semlali.takima.cloud "sudo journalctl --vacuum-time=1d || true"
          echo "=== Final disk check ==="
          ssh admin@sami.semlali.takima.cloud "df -h"

      - name: Deploy with Ansible
        run: |
          echo "${{ secrets.ANSIBLE_VAULT_PASSWORD }}" > vault_pass.txt
          ansible-playbook -i ansible/inventories/setup.yml ansible/playbook.yml --vault-password-file vault_pass.txt
          rm vault_pass.txt

      - name: Debug containers
        run: |
          echo "=== Container status ==="
          ssh admin@sami.semlali.takima.cloud "sudo docker ps -a"
          echo "=== Backend logs ==="
          ssh admin@sami.semlali.takima.cloud "sudo docker logs backend --tail 50"
          echo "=== Httpd logs ==="
          ssh admin@sami.semlali.takima.cloud "sudo docker logs httpd --tail 20"

      - name: Verify deployment
        run: |
          echo "Waiting for services to start..."
          sleep 45  # give more time for containers to warm up
          echo "Testing root endpoint (no DB dependency)..."
          curl -fsS --retry 5 --retry-delay 3 http://sami.semlali.takima.cloud/ || exit 1
          echo "Testing students endpoint..."
          curl -fsS --retry 3 --retry-delay 2 http://sami.semlali.takima.cloud/students || echo "Students endpoint failed (DB issue?)"
          echo "Deployment successful! API is responding."
